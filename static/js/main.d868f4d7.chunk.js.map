{"version":3,"sources":["reportWebVitals.ts","Others/OurIcons.ts","Others/Images.ts","Others/GlobalVars.ts","Overmind/OvermindState.ts","Overmind/OvermindActions.ts","Overmind/OvermindHelper.ts","Others/Theme.ts","Components/Left/AvatarText.tsx","Helpers/SvgHelper.tsx","Components/Left/NavigationLinks.tsx","Components/Left/BottomNavigationLinks.tsx","Components/LeftPart.tsx","Others/GlobalMethods.ts","Components/Right/Top/RouteLocation.tsx","Components/Right/Top/TopRightButtons.tsx","Components/Items/ListTitle.tsx","Components/Items/OurListItem.tsx","Components/Items/ListItemWithIcon.tsx","Components/Right/Routes/ProjectsRoute.tsx","Components/Right/Routes/ContactRoute.tsx","Components/Right/Routes/SkillsRoute.tsx","Components/Right/Routes/AboutRoute.tsx","Components/RightPart.tsx","Components/Dialogs/ColorPickerDialog.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","OurIcons","githubIcon","facebookIcon","whatsappIcon","wordpressIcon","skypeIcon","linkedin","email","linkIcon","close","fork","menu","star","palette","circle","LocalImages","avatar","avatar_with_laptop","WebImages","giftIcon","GlobalVars","primaryColor","otherColors","myName","myOccupation","myDetails","myLeftAvatarImage","myRightAvatarImage","routes","bottomLinks","svgPath","link","skills","text","arr","title","logo","desc","projects","contacts","state","isLeftShowing","isColorPickerDialogShowing","setPrimaryColor","value","showLeftPart","showColorPickerDialog","config","actions","useAppState","createStateHook","useActions","createActionsHook","theme","createMuiTheme","primary","main","secondary","error","red","A400","background","default","action","disabled","useStyles","makeStyles","height","width","color","marginTop","fontSize","fontWeight","subtitle","AvatarText","props","classes","Grid","item","xs","container","direction","justify","alignItems","Avatar","alt","src","className","Typography","toUpperCase","SvgHelper","path","size","styles","style","viewBox","fill","d","marginLeft","marginRight","textDecoration","divider","margin","alignSelf","NavigationLinks","useTheme","belowSm","useMediaQuery","breakpoints","down","alignContent","Hidden","mdUp","IconButton","onClick","Divider","backgroundColor","orientation","flexItem","map","index","Button","activeStyle","component","NavLink","to","toLowerCase","root","paddingBottom","iconButton","BottomNavigationLinks","target","href","padding","LeftPart","sm","md","lg","xl","Paper","elevation","GlobalMethods","getHeightWidthWeb","console","debug","getHeightWidthMobile","up","currentRoute","cursor","getThemeObj","RouteLocation","location","useLocation","variant","pathname","replace","TopRightButtons","ListTitle","fontStyle","getLinkIcon","url","toString","includes","paddingTop","textContainer","overflow","lineHeight","OurListItem","marginBottom","itemRoot","ListItemWithIcon","arrItem","ProjectsRoute","ContactRoute","SkillsRoute","aboveSmAvatarSize","belowSmAvatarSize","paddingLeft","id","content","paddingRight","maxHeight","maxWidth","RightPart","useState","contentHeight","setContentHeight","useEffect","rc","document","getElementById","rt","offsetHeight","log","scroll","overflowY","exact","ColorPickerDialog","Dialog","open","onClose","DialogContent","onChange","event","hex","colors","paper","App","overmind","createOvermind","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"iaAceA,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yCCPDQ,EAAb,iDAAaA,EAEFC,WAAa,8uBAFXD,EAGFE,aAAe,gSAHbF,EAIFG,aAAe,0pCAJbH,EAKFI,cAAgB,09BALdJ,EAMFK,UAAY,8uBANVL,EAOFM,SAAW,uZAPTN,EAQFO,MAAQ,oHARNP,EAYFQ,SAAW,+sBAZTR,EAaFS,MAAQ,2MAbNT,EAcFU,KAAO,iuBAdLV,EAeFW,KAAO,iDAfLX,EAgBFY,KAAO,uGAhBLZ,EAiBFa,QAAU,+iBAjBRb,EAoBFc,OAAS,+ECtBb,IAAMC,EAAb,iDAAaA,EACFC,OAAS,cADPD,EAEFE,mBAAqB,eAGzB,IAAMC,EAAb,iDAAaA,EACFC,SAAW,wDCFf,IAAMC,EAAb,iDAAaA,EAEFC,aAAe,UAFbD,EAGFE,YAA6B,CAChC,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,WAPKF,EASFG,OAAS,cATPH,EAUFI,aAAe,kCAVbJ,EAWFK,UAAY,mkBAXVL,EAYFM,kBAAoB,KAZlBN,EAaFO,mBAAqB,KAbnBP,EAeFQ,OAAwB,CAC3B,QACA,SACA,WACA,WAnBKR,EAsBFS,YAA8C,CACjD,CACIC,QAAS9B,EAASM,SAClByB,KAAM,oDAEV,CACID,QAAS9B,EAASO,MAClBwB,KAAM,+DAEV,CACID,QAAS9B,EAASE,aAClB6B,KAAM,MAjCLX,EAqCFY,OAAyC,CAC5C,CACIC,KAAM,+BACNC,IAAK,CACD,CACIC,MAAO,MACPC,KAAM,oEAEV,CACID,MAAO,OACPC,KAAM,wDAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,aACPC,KAAM,oEAEV,CACID,MAAO,MACPC,KAAM,+CAEV,CACID,MAAO,OACPC,KAAM,gEAEV,CACID,MAAO,MACPC,KAAM,uEAEV,CACID,MAAO,wBACPC,KAAM,8EAEV,CACID,MAAO,MACPC,KAAM,sDAEV,CACID,MAAO,MACPC,KAAM,gEAOlB,CACIH,KAAM,uBACNC,IAAK,CACD,CACIC,MAAO,0BACPC,KAAM,8DAEV,CACID,MAAO,SACPC,KAAM,8DAKlB,CACIH,KAAM,kBACNC,IAAK,CACD,CACIC,MAAO,UACPE,KAAM,SACND,KAAM,oEAGV,CACID,MAAO,OACPE,KAAM,iBACND,KAAM,sEAIlB,CACIH,KAAM,SACNC,IAAK,CACD,CACIC,MAAO,MACPC,KAAM,8DAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,UACPC,KAAM,8DAEV,CACID,MAAO,gBACPC,KAAM,0GAEV,CACID,MAAO,WACPC,KAAM,2DAEV,CACID,MAAO,UACPC,KAAM,gEAEV,CACID,MAAO,aACPC,KAAM,yDAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,QACPC,KAAM,0DAEV,CACID,MAAO,MACPC,KAAM,oEAEV,CACID,MAAO,OACPC,KAAM,4DAEV,CACID,MAAO,QACPC,KAAM,0DAEV,CACID,MAAO,SACPC,KAAM,4DAEV,CACID,MAAO,QACPC,KAAM,0DAEV,CACID,MAAO,OACPC,KAAM,8DAEV,CACID,MAAO,gBACPC,KAAM,gEAEV,CACID,MAAO,cACPC,KAAM,4DAEV,CACID,MAAO,UACPC,KAAM,8CAEV,CACID,MAAO,MACPC,KAAM,0DAEV,CACID,MAAO,eACPC,KAAM,0FAEV,CACID,MAAO,eACPC,KAAM,+FAEV,CACID,MAAO,QACPC,KAAM,oGAEV,CACID,MAAO,kBACPC,KAAM,mEAEV,CACID,MAAO,SACPC,KAAM,iEA7NbhB,EAoOFkB,SAA2C,CAC9C,CACIL,KAAM,eACNC,IAAK,CACD,CACIC,MAAO,WACPC,KAAM,6GACNC,KAAM,iEACNN,KAAM,wFAEV,CACII,MAAO,cACPC,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","file":"static/js/main.d868f4d7.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// These are all svg icon paths copied from https://materialdesignicons.com/\r\n\r\nexport class OurIcons {\r\n    // websites\r\n    static githubIcon = 'M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z';\r\n    static facebookIcon = 'M12 2.04C6.5 2.04 2 6.53 2 12.06C2 17.06 5.66 21.21 10.44 21.96V14.96H7.9V12.06H10.44V9.85C10.44 7.34 11.93 5.96 14.22 5.96C15.31 5.96 16.45 6.15 16.45 6.15V8.62H15.19C13.95 8.62 13.56 9.39 13.56 10.18V12.06H16.34L15.89 14.96H13.56V21.96A10 10 0 0 0 22 12.06C22 6.53 17.5 2.04 12 2.04Z';\r\n    static whatsappIcon = 'M12.04 2C6.58 2 2.13 6.45 2.13 11.91C2.13 13.66 2.59 15.36 3.45 16.86L2.05 22L7.3 20.62C8.75 21.41 10.38 21.83 12.04 21.83C17.5 21.83 21.95 17.38 21.95 11.92C21.95 9.27 20.92 6.78 19.05 4.91C17.18 3.03 14.69 2 12.04 2M12.05 3.67C14.25 3.67 16.31 4.53 17.87 6.09C19.42 7.65 20.28 9.72 20.28 11.92C20.28 16.46 16.58 20.15 12.04 20.15C10.56 20.15 9.11 19.76 7.85 19L7.55 18.83L4.43 19.65L5.26 16.61L5.06 16.29C4.24 15 3.8 13.47 3.8 11.91C3.81 7.37 7.5 3.67 12.05 3.67M8.53 7.33C8.37 7.33 8.1 7.39 7.87 7.64C7.65 7.89 7 8.5 7 9.71C7 10.93 7.89 12.1 8 12.27C8.14 12.44 9.76 14.94 12.25 16C12.84 16.27 13.3 16.42 13.66 16.53C14.25 16.72 14.79 16.69 15.22 16.63C15.7 16.56 16.68 16.03 16.89 15.45C17.1 14.87 17.1 14.38 17.04 14.27C16.97 14.17 16.81 14.11 16.56 14C16.31 13.86 15.09 13.26 14.87 13.18C14.64 13.1 14.5 13.06 14.31 13.3C14.15 13.55 13.67 14.11 13.53 14.27C13.38 14.44 13.24 14.46 13 14.34C12.74 14.21 11.94 13.95 11 13.11C10.26 12.45 9.77 11.64 9.62 11.39C9.5 11.15 9.61 11 9.73 10.89C9.84 10.78 10 10.6 10.1 10.45C10.23 10.31 10.27 10.2 10.35 10.04C10.43 9.87 10.39 9.73 10.33 9.61C10.27 9.5 9.77 8.26 9.56 7.77C9.36 7.29 9.16 7.35 9 7.34C8.86 7.34 8.7 7.33 8.53 7.33Z';\r\n    static wordpressIcon = \"M3.42,12C3.42,10.76 3.69,9.58 4.16,8.5L8.26,19.72C5.39,18.33 3.42,15.4 3.42,12M17.79,11.57C17.79,12.3 17.5,13.15 17.14,14.34L16.28,17.2L13.18,8L14.16,7.9C14.63,7.84 14.57,7.16 14.11,7.19C14.11,7.19 12.72,7.3 11.82,7.3L9.56,7.19C9.1,7.16 9.05,7.87 9.5,7.9L10.41,8L11.75,11.64L9.87,17.27L6.74,8L7.73,7.9C8.19,7.84 8.13,7.16 7.67,7.19C7.67,7.19 6.28,7.3 5.38,7.3L4.83,7.29C6.37,4.96 9,3.42 12,3.42C14.23,3.42 16.27,4.28 17.79,5.67H17.68C16.84,5.67 16.24,6.4 16.24,7.19C16.24,7.9 16.65,8.5 17.08,9.2C17.41,9.77 17.79,10.5 17.79,11.57M12.15,12.75L14.79,19.97L14.85,20.09C13.96,20.41 13,20.58 12,20.58C11.16,20.58 10.35,20.46 9.58,20.23L12.15,12.75M19.53,7.88C20.2,9.11 20.58,10.5 20.58,12C20.58,15.16 18.86,17.93 16.31,19.41L18.93,11.84C19.42,10.62 19.59,9.64 19.59,8.77L19.53,7.88M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,21.54C17.26,21.54 21.54,17.26 21.54,12C21.54,6.74 17.26,2.46 12,2.46C6.74,2.46 2.46,6.74 2.46,12C2.46,17.26 6.74,21.54 12,21.54Z\";\r\n    static skypeIcon = \"M18,6C20.07,8.04 20.85,10.89 20.36,13.55C20.77,14.27 21,15.11 21,16A5,5 0 0,1 16,21C15.11,21 14.27,20.77 13.55,20.36C10.89,20.85 8.04,20.07 6,18C3.93,15.96 3.15,13.11 3.64,10.45C3.23,9.73 3,8.89 3,8A5,5 0 0,1 8,3C8.89,3 9.73,3.23 10.45,3.64C13.11,3.15 15.96,3.93 18,6M12.04,17.16C14.91,17.16 16.34,15.78 16.34,13.92C16.34,12.73 15.78,11.46 13.61,10.97L11.62,10.53C10.86,10.36 10,10.13 10,9.42C10,8.7 10.6,8.2 11.7,8.2C13.93,8.2 13.72,9.73 14.83,9.73C15.41,9.73 15.91,9.39 15.91,8.8C15.91,7.43 13.72,6.4 11.86,6.4C9.85,6.4 7.7,7.26 7.7,9.54C7.7,10.64 8.09,11.81 10.25,12.35L12.94,13.03C13.75,13.23 13.95,13.68 13.95,14.1C13.95,14.78 13.27,15.45 12.04,15.45C9.63,15.45 9.96,13.6 8.67,13.6C8.09,13.6 7.67,14 7.67,14.57C7.67,15.68 9,17.16 12.04,17.16Z\"\r\n    static linkedin = \"M19 3A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V5A2 2 0 0 1 5 3H19M18.5 18.5V13.2A3.26 3.26 0 0 0 15.24 9.94C14.39 9.94 13.4 10.46 12.92 11.24V10.13H10.13V18.5H12.92V13.57C12.92 12.8 13.54 12.17 14.31 12.17A1.4 1.4 0 0 1 15.71 13.57V18.5H18.5M6.88 8.56A1.68 1.68 0 0 0 8.56 6.88C8.56 5.95 7.81 5.19 6.88 5.19A1.69 1.69 0 0 0 5.19 6.88C5.19 7.81 5.95 8.56 6.88 8.56M8.27 18.5V10.13H5.5V18.5H8.27Z\";\r\n    static email = \"M20,8L12,13L4,8V6L12,11L20,6M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z\";\r\n\r\n\r\n    // Common icons\r\n    static linkIcon = 'M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z'\r\n    static close = 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z'\r\n    static fork = 'M6,2A3,3 0 0,1 9,5C9,6.28 8.19,7.38 7.06,7.81C7.15,8.27 7.39,8.83 8,9.63C9,10.92 11,12.83 12,14.17C13,12.83 15,10.92 16,9.63C16.61,8.83 16.85,8.27 16.94,7.81C15.81,7.38 15,6.28 15,5A3,3 0 0,1 18,2A3,3 0 0,1 21,5C21,6.32 20.14,7.45 18.95,7.85C18.87,8.37 18.64,9 18,9.83C17,11.17 15,13.08 14,14.38C13.39,15.17 13.15,15.73 13.06,16.19C14.19,16.62 15,17.72 15,19A3,3 0 0,1 12,22A3,3 0 0,1 9,19C9,17.72 9.81,16.62 10.94,16.19C10.85,15.73 10.61,15.17 10,14.38C9,13.08 7,11.17 6,9.83C5.36,9 5.13,8.37 5.05,7.85C3.86,7.45 3,6.32 3,5A3,3 0 0,1 6,2M6,4A1,1 0 0,0 5,5A1,1 0 0,0 6,6A1,1 0 0,0 7,5A1,1 0 0,0 6,4M18,4A1,1 0 0,0 17,5A1,1 0 0,0 18,6A1,1 0 0,0 19,5A1,1 0 0,0 18,4M12,18A1,1 0 0,0 11,19A1,1 0 0,0 12,20A1,1 0 0,0 13,19A1,1 0 0,0 12,18Z'\r\n    static menu = 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z'\r\n    static star = 'M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z'\r\n    static palette = \"M17.5,12A1.5,1.5 0 0,1 16,10.5A1.5,1.5 0 0,1 17.5,9A1.5,1.5 0 0,1 19,10.5A1.5,1.5 0 0,1 17.5,12M14.5,8A1.5,1.5 0 0,1 13,6.5A1.5,1.5 0 0,1 14.5,5A1.5,1.5 0 0,1 16,6.5A1.5,1.5 0 0,1 14.5,8M9.5,8A1.5,1.5 0 0,1 8,6.5A1.5,1.5 0 0,1 9.5,5A1.5,1.5 0 0,1 11,6.5A1.5,1.5 0 0,1 9.5,8M6.5,12A1.5,1.5 0 0,1 5,10.5A1.5,1.5 0 0,1 6.5,9A1.5,1.5 0 0,1 8,10.5A1.5,1.5 0 0,1 6.5,12M12,3A9,9 0 0,0 3,12A9,9 0 0,0 12,21A1.5,1.5 0 0,0 13.5,19.5C13.5,19.11 13.35,18.76 13.11,18.5C12.88,18.23 12.73,17.88 12.73,17.5A1.5,1.5 0 0,1 14.23,16H16A5,5 0 0,0 21,11C21,6.58 16.97,3 12,3Z\"\r\n\r\n    // not used anymore\r\n    static circle = 'M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z'\r\n}\r\n","export class LocalImages {\r\n    static avatar = '/avatar.png'\r\n    static avatar_with_laptop = \"/avatar2.png\"\r\n}\r\n\r\nexport class WebImages {\r\n    static giftIcon = 'https://image.flaticon.com/icons/svg/1867/1867817.svg'\r\n}","import { OurIcons } from \"./OurIcons\"\r\nimport { NavBottomLinksInterface, TitledListItemInterface } from \"./Interfaces\"\r\nimport { WebImages } from \"./Images\"\r\n\r\nexport class GlobalVars {\r\n\r\n    static primaryColor = \"#00C853\"\r\n    static otherColors: Array<string> = [\r\n        '#D50000', '#C51162', '#AA00FF', '#6200EA', '#304FFE',\r\n        '#2962FF', '#0091EA', '#00B8D4', '#00BFA5', '#00C853',\r\n        '#64DD17', '#AEEA00', '#FFD600', '#FFAB00', '#FF6D00',\r\n        '#DD2C00'\r\n    ]\r\n    static myName = 'Fawad Javid'\r\n    static myOccupation = 'Penetration Tester / Red Teamer'\r\n    static myDetails = 'Hello, I am Fawad Javid. I am a Penetration Tester and Red Teamer working as part of the MSSP team for the past 2 years at Systems Ltd. Part Time Bug Bounty Hunter and Cyber security researcher. I have helped many companies secure themselves as a freelancer. I m having experience in Red Teaming, Web Application Security, Mobile Application Security, API Security, Source Code Analysis, Vulnerability Assessment and Penetration Testing and excellent proficiency in some of the best tools like IBM AppScan, Burpsuit, Postman, SoapUI, multiple Kali OS tools and custom scripts.'\r\n    static myLeftAvatarImage = null\r\n    static myRightAvatarImage = null\r\n\r\n    static routes: Array<string> = [\r\n        \"About\",\r\n        \"Skills\",\r\n        \"Projects\",\r\n        \"Contact\",\r\n    ]\r\n\r\n    static bottomLinks: Array<NavBottomLinksInterface> = [\r\n        {\r\n            svgPath: OurIcons.linkedin,\r\n            link: 'https://pk.linkedin.com/in/fawad-javid-b25474180'\r\n        },\r\n        {\r\n            svgPath: OurIcons.email,\r\n            link: 'mailto:max.mustermann@example.com?body=My custom mail body\"'\r\n        },\r\n        {\r\n            svgPath: OurIcons.facebookIcon,\r\n            link: '#'\r\n        }\r\n    ]\r\n\r\n    static skills: Array<TitledListItemInterface> = [\r\n        {\r\n            text: \"Programming/Markup Languages\",\r\n            arr: [\r\n                {\r\n                    title: 'C++',\r\n                    logo: 'https://seeklogo.com/images/C/c-logo-1B1817C041-seeklogo.com.png',\r\n                },\r\n                {\r\n                    title: 'Java',\r\n                    logo: 'https://www.vectorlogo.zone/logos/java/java-icon.svg',\r\n                },\r\n                {\r\n                    title: 'Python',\r\n                    logo: 'https://www.vectorlogo.zone/logos/python/python-icon.svg',\r\n                },\r\n                {\r\n                    title: 'JavaScript',\r\n                    logo: 'https://www.vectorlogo.zone/logos/javascript/javascript-icon.svg',\r\n                },\r\n                {\r\n                    title: 'SQL',\r\n                    logo: 'https://www.svgrepo.com/show/255832/sql.svg',\r\n                },\r\n                {\r\n                    title: 'HTML',\r\n                    logo: 'https://www.vectorlogo.zone/logos/w3_html5/w3_html5-icon.svg',\r\n                },\r\n                {\r\n                    title: 'CSS',\r\n                    logo: 'https://seeklogo.com/images/C/css3-logo-F1923C8D0E-seeklogo.com.png',\r\n                },\r\n                {\r\n                    title: 'Bash/Shell/PowerShell',\r\n                    logo: 'https://docs.microsoft.com/en-us/powershell/media/index/powershell_128.svg',\r\n                },\r\n                {\r\n                    title: 'PHP',\r\n                    logo: 'https://www.vectorlogo.zone/logos/php/php-icon.svg',\r\n                },\r\n                {\r\n                    title: 'XML',\r\n                    logo: 'https://www.vectorlogo.zone/logos/w3c_xml/w3c_xml-icon.svg'\r\n                }\r\n                \r\n\r\n\r\n            ]\r\n        },\r\n        {\r\n            text: \"Libraries/Frameworks\",\r\n            arr: [\r\n                {\r\n                    title: 'Android App Development',\r\n                    logo: 'https://www.vectorlogo.zone/logos/android/android-icon.svg'\r\n                },\r\n                {\r\n                    title: 'NodeJS',\r\n                    logo: 'https://www.vectorlogo.zone/logos/nodejs/nodejs-icon.svg'\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            text: \"Human Languages\",\r\n            arr: [\r\n                {\r\n                    title: 'English',\r\n                    desc: \"Fluent\",\r\n                    logo: 'https://www.flaticon.com/premium-icon/icons/svg/3097/3097023.svg',\r\n                },\r\n\r\n                {\r\n                    title: 'Urdu',\r\n                    desc: \"Conversational\",\r\n                    logo: 'https://www.flaticon.com/premium-icon/icons/svg/3097/3097115.svg',\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            text: \"Others\",\r\n            arr: [\r\n                {\r\n                    title: 'Git',\r\n                    logo: 'https://www.vectorlogo.zone/logos/git-scm/git-scm-icon.svg'\r\n                },\r\n                {\r\n                    title: 'GitHub',\r\n                    logo: 'https://www.vectorlogo.zone/logos/github/github-icon.svg'\r\n                },\r\n                {\r\n                    title: 'GitLab',\r\n                    logo: 'https://www.vectorlogo.zone/logos/gitlab/gitlab-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Arduino',\r\n                    logo: 'https://www.vectorlogo.zone/logos/arduino/arduino-icon.svg'\r\n                },\r\n                {\r\n                    title: 'IntelliJ IDEA',\r\n                    logo: 'https://resources.jetbrains.com/storage/products/intellij-idea/img/meta/intellij-idea_logo_300x300.png'\r\n                },\r\n                {\r\n                    title: 'Webstorm',\r\n                    logo: 'https://cdn.worldvectorlogo.com/logos/webstorm-icon.svg'\r\n                },\r\n                {\r\n                    title: 'VS Code',\r\n                    logo: 'https://cdn.worldvectorlogo.com/logos/visual-studio-code.svg'\r\n                },\r\n                {\r\n                    title: 'Automation',\r\n                    logo: 'https://image.flaticon.com/icons/svg/1035/1035688.svg'\r\n                },\r\n                {\r\n                    title: 'Gradle',\r\n                    logo: 'https://www.vectorlogo.zone/logos/gradle/gradle-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Apache',\r\n                    logo: 'https://www.vectorlogo.zone/logos/apache/apache-ar21.svg'\r\n                },\r\n                {\r\n                    title: 'Asana',\r\n                    logo: 'https://www.vectorlogo.zone/logos/asana/asana-ar21.svg'\r\n                },\r\n                {\r\n                    title: 'AWS',\r\n                    logo: 'https://www.vectorlogo.zone/logos/amazon_aws/amazon_aws-ar21.svg'\r\n                },\r\n                {\r\n                    title: 'Expo',\r\n                    logo: 'https://www.vectorlogo.zone/logos/expoio/expoio-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Figma',\r\n                    logo: 'https://www.vectorlogo.zone/logos/figma/figma-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Heroku',\r\n                    logo: 'https://www.vectorlogo.zone/logos/heroku/heroku-icon.svg'\r\n                },\r\n                {\r\n                    title: 'NgInx',\r\n                    logo: 'https://www.vectorlogo.zone/logos/nginx/nginx-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Yarn',\r\n                    logo: 'https://www.vectorlogo.zone/logos/yarnpkg/yarnpkg-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Facebook SDKs',\r\n                    logo: 'https://www.vectorlogo.zone/logos/facebook/facebook-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Google SDKs',\r\n                    logo: 'https://www.vectorlogo.zone/logos/google/google-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Deployd',\r\n                    logo: 'https://deployd.com/img/bucket/modular.png'\r\n                },\r\n                {\r\n                    title: 'npm',\r\n                    logo: 'https://www.vectorlogo.zone/logos/npmjs/npmjs-icon.svg'\r\n                },\r\n                {\r\n                    title: 'Greasemonkey',\r\n                    logo: 'https://addons.cdn.mozilla.net/user-media/addon_icons/0/748-64.png?modified=1531822767'\r\n                },\r\n                {\r\n                    title: 'Tampermonkey',\r\n                    logo: 'https://addons.cdn.mozilla.net/user-media/addon_icons/683/683490-64.png?modified=1565719090'\r\n                },\r\n                {\r\n                    title: 'Linux',\r\n                    logo: 'https://www.freepnglogos.com/uploads/linux-png/file-icons-flat-linux-svg-wikimedia-commons-6.png'\r\n                },\r\n                {\r\n                    title: 'Adobe Photoshop',\r\n                    logo: 'https://www.adobe.com/content/dam/cc/icons/photoshop-mobile.svg'\r\n                },\r\n                {\r\n                    title: 'Netify',\r\n                    logo: 'https://www.vectorlogo.zone/logos/netlify/netlify-icon.svg'\r\n                },\r\n\r\n            ]\r\n        },\r\n    ]\r\n\r\n    static projects: Array<TitledListItemInterface> = [\r\n        {\r\n            text: \"Android Apps\",\r\n            arr: [\r\n                {\r\n                    title: 'Desplash',\r\n                    logo: 'https://lh3.googleusercontent.com/ILrto9KguXlr-clbhYKUonpnHszgNp_N5Qvc8_u9QaM71oaqNKcYql2sV3sqZ7nqzsc=s180',\r\n                    desc: 'Automatic Free High Quality Wallpapers powered by Unsplash.com',\r\n                    link: 'https://apkpure.com/desplash-beautiful-automatic-unsplash-wallpapers/p32929.desplash'\r\n                },\r\n                {\r\n                    title: 'BirthdayBot',\r\n                    logo: 'https://image.flaticon.com/icons/svg/415/415587.svg',\r\n                    desc: 'Birthday wishing apps, made for individual people...',\r\n                    link: ''\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            text: \"WebApps\",\r\n            arr: [\r\n                {\r\n                    title: 'IndecisionApp',\r\n                    logo: 'https://image.flaticon.com/icons/svg/2762/2762575.svg',\r\n                    desc: 'My first ReactJS app',\r\n                    link: 'https://p32929.github.io/IndecisionApp'\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            text: \"Android Libraries\",\r\n            arr: [\r\n                {\r\n                    title: 'Android-Receivers-Library',\r\n                    logo: 'https://www.vectorlogo.zone/logos/android/android-icon.svg',\r\n                    desc: 'A library for simpler BroadcastReceiver implementations',\r\n                    link: 'https://github.com/p32929/Android-Receivers-Library'\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            text: \"Desktop App/Scripts\",\r\n            arr: [\r\n                {\r\n                    title: 'MoodyLauncher',\r\n                    logo: 'https://image.flaticon.com/icons/svg/262/262551.svg',\r\n                    desc: 'A simple App Launcher Script that runs a list of apps depending on the users mood',\r\n                    link: 'https://github.com/p32929/MoodyLauncher'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            text: \"Others\",\r\n            arr: [\r\n                {\r\n                    title: 'CGPA_Calculator',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'CGPA Calculator made using C',\r\n                    link: 'https://github.com/p32929/CGPA_Calculator'\r\n                },\r\n                {\r\n                    title: 'PersonalDiary',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A personal diary writer created using C',\r\n                    link: 'https://github.com/p32929/PersonalDiary'\r\n                },\r\n                {\r\n                    title: 'PaGeHe',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Password generators created using C++',\r\n                    link: 'https://github.com/p32929/PaGeHe'\r\n                },\r\n                {\r\n                    title: 'MathBlitz',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Simple math game created using C',\r\n                    link: 'https://github.com/p32929/MathBlitz'\r\n                },\r\n                {\r\n                    title: 'PaGeHa',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Password generator created using C',\r\n                    link: 'https://github.com/p32929/PaGeHa'\r\n                },\r\n                {\r\n                    title: 'TicTacToe',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A TicTacToe game made using C ',\r\n                    link: 'https://github.com/p32929/TicTacToe'\r\n                },\r\n                {\r\n                    title: 'Server_up_down_checker_and_notifier',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Server up-down checker created using python',\r\n                    link: 'https://github.com/p32929/MyPython3Scripts/blob/master/Server_up_down_checker_and_notifier.py'\r\n                },\r\n                {\r\n                    title: '.gitignore',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A collection of gitignore files that I use',\r\n                    link: 'https://github.com/p32929/.gitignore'\r\n                },\r\n                {\r\n                    title: 'flutter_state_management_test',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A state management demo for Flutter',\r\n                    link: 'https://github.com/p32929/flutter_state_management_test'\r\n                },\r\n                {\r\n                    title: 'ReduxCounter',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A demo for ReactJS and Redux',\r\n                    link: 'https://github.com/p32929/ReduxCounter'\r\n                },\r\n                {\r\n                    title: 'ReduxCounter',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'A demo for ReactJS state management libraries',\r\n                    link: 'https://github.com/p32929/react-state-management'\r\n                },\r\n                {\r\n                    title: 'YandexDirectLinkGenerator',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Yandex Disk Direct Link Generator - BATCH',\r\n                    link: 'https://github.com/p32929/YandexDirectLinkGenerator'\r\n                },\r\n                {\r\n                    title: 'UVA_Solutions',\r\n                    logo: WebImages.giftIcon,\r\n                    desc: 'Some UVA solutions',\r\n                    link: 'https://github.com/p32929/UVA_Solutions'\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n\r\n    static contacts: Array<TitledListItemInterface> = [\r\n        {\r\n            text: \"Contact me\",\r\n            arr: [\r\n                {\r\n                    title: 'Skype',\r\n                    logo: 'https://image.flaticon.com/icons/svg/174/174869.svg',\r\n                    desc: 'p32929',\r\n                    link: 'skype:p32929?chat'\r\n                },\r\n                {\r\n                    title: 'WhatsApp',\r\n                    logo: 'https://image.flaticon.com/icons/svg/733/733585.svg',\r\n                    link: 'https://api.whatsapp.com/send?phone=8801796306262'\r\n                },\r\n                {\r\n                    title: 'Facebook',\r\n                    logo: 'https://image.flaticon.com/icons/svg/124/124010.svg',\r\n                    link: 'https://www.facebook.com/p32929'\r\n                },\r\n                {\r\n                    title: 'Anywhere on the internet',\r\n                    logo: 'https://image.flaticon.com/icons/png/512/364/364089.png',\r\n                    link: '@p32929'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            text: \"Website Profiles\",\r\n            arr: [\r\n                {\r\n                    title: 'GitHub',\r\n                    logo: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',\r\n                    link: 'https://github.com/p32929/'\r\n                },\r\n                {\r\n                    title: 'Wordpress',\r\n                    logo: 'https://lh3.googleusercontent.com/FKoZImII3S1CKxDwudC2k1EW8NMDi8FyWRk0_AufAQcixOd-kdll5H32L2lKvGIbVWIB',\r\n                    link: 'https://p32929.wordpress.com/'\r\n                },\r\n                {\r\n                    title: 'YouTube',\r\n                    logo: 'https://lh3.googleusercontent.com/lMoItBgdPPVDJsNOVtP26EKHePkwBg-PkuY9NOrc-fumRtTFP4XhpUNk_22syN4Datc',\r\n                    link: 'https://www.youtube.com/channel/UCFucp3uZ96IBYxG8755AniQ'\r\n                },\r\n                {\r\n                    title: 'Google Play',\r\n                    logo: 'https://www.vectorlogo.zone/logos/google_play/google_play-icon.svg',\r\n                    link: 'https://play.google.com/store/apps/developer?id=Rich+IT&hl=en'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            text: \"Apps I rarely use\",\r\n            arr: [\r\n                {\r\n                    title: 'LinkedIn',\r\n                    logo: 'https://image.flaticon.com/icons/svg/174/174857.svg',\r\n                    link: 'https://www.linkedin.com/in/p32929/'\r\n                },\r\n                {\r\n                    title: 'Reddit',\r\n                    logo: 'https://image.flaticon.com/icons/svg/174/174866.svg',\r\n                    link: 'https://www.reddit.com/user/p32929'\r\n                },\r\n                {\r\n                    title: 'Twitter',\r\n                    logo: 'https://image.flaticon.com/icons/svg/733/733579.svg',\r\n                    link: 'https://twitter.com/p32929'\r\n                },\r\n                {\r\n                    title: 'Instagram',\r\n                    logo: 'https://image.flaticon.com/icons/svg/2111/2111463.svg',\r\n                    link: 'https://www.instagram.com/p32929/'\r\n                },\r\n                {\r\n                    title: 'Fiverr',\r\n                    logo: 'https://99designs-blog.imgix.net/blog/wp-content/uploads/2018/09/fiverr-2018.png?auto=format&q=60&fit=max&w=200',\r\n                    link: 'https://www.fiverr.com/users/fayazbinsalam/'\r\n                },\r\n                {\r\n                    title: \"Freelancer\",\r\n                    logo: \"https://lh3.googleusercontent.com/EXMdy4ai6HHl_Ze8vxC7pdQzfS0HFiZ70F2IdPq_VuYropTkrUFyPPlftbPKEbhISg\",\r\n                    link: \"https://www.freelancer.com/u/p32929\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            text: \"Thank you for visiting my portfolio\",\r\n            arr: [\r\n                {\r\n                    title: \"Click on the link button\",\r\n                    desc: 'To create your own portfolio. It will only take 3 minutes',\r\n                    logo: WebImages.giftIcon,\r\n                    link: 'https://github.com/p32929/p32929.github.io/'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n","import { GlobalVars } from \"../Others/GlobalVars\";\r\n\r\nexport interface State {\r\n    primaryColor: string,\r\n    isLeftShowing: boolean,\r\n    isColorPickerDialogShowing: boolean,\r\n}\r\n\r\nexport const state: State = {\r\n    primaryColor: GlobalVars.primaryColor,\r\n    isLeftShowing: true,\r\n    isColorPickerDialogShowing: false\r\n}\r\n","import { Context } from './OvermindHelper'\r\n\r\n// export const increaseCounter = ({state}: Context, value: number) => {\r\n//     state.counter += value;\r\n// }\r\n\r\nexport const setPrimaryColor = ({ state }: Context, value: string) => {\r\n    state.primaryColor = value;\r\n}\r\n\r\nexport const showLeftPart = ({ state }: Context, value: boolean) => {\r\n    state.isLeftShowing = value;\r\n}\r\n\r\nexport const showColorPickerDialog = ({ state }: Context, value: boolean) => {\r\n    state.isColorPickerDialogShowing = value;\r\n}","import {IContext} from 'overmind'\r\nimport {state} from './OvermindState'\r\nimport * as actions from './OvermindActions'\r\nimport {createActionsHook, createStateHook} from 'overmind-react'\r\n\r\nexport const config = {\r\n    state,\r\n    actions\r\n};\r\n\r\nexport type Context = IContext<{\r\n    state: typeof config.state\r\n    actions: typeof config.actions\r\n}>\r\n\r\n\r\nexport const useAppState = createStateHook<Context>()\r\nexport const useActions = createActionsHook<Context>()\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n// Create a theme instance.\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#556cd6',\r\n        },\r\n        secondary: {\r\n            main: '#19857b',\r\n        },\r\n        error: {\r\n            main: red.A400,\r\n        },\r\n        background: {\r\n            default: '#fff',\r\n        },\r\n        action: {\r\n            disabled: \"#212121\"\r\n        }\r\n    },\r\n});\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Avatar, Grid, Theme, Typography} from \"@material-ui/core\";\r\nimport {useActions, useAppState} from '../../Overmind/OvermindHelper';\r\nimport {GlobalVars} from '../../Others/GlobalVars';\r\nimport {LocalImages} from '../../Others/Images';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        avatar: {\r\n            height: 125,\r\n            width: 125,\r\n        },\r\n        title: {\r\n            color: \"#212121\",\r\n            marginTop: 24,\r\n            fontSize: 14,\r\n            fontWeight: 600\r\n        },\r\n        subtitle: {\r\n            fontSize: 12,\r\n            color: \"#212121\",\r\n            fontWeight: 600\r\n        },\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst AvatarText: React.FC<Props> = (props) => {\r\n    const {} = useActions()\r\n    const {} = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid item xs container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Avatar alt={GlobalVars.myName + \" - \" + GlobalVars.myOccupation}\r\n                src={GlobalVars.myLeftAvatarImage ?? LocalImages.avatar} className={classes.avatar}/>\r\n        <Typography className={classes.title}>{GlobalVars.myName.toUpperCase()}</Typography>\r\n        <Typography className={classes.subtitle}>{GlobalVars.myOccupation}</Typography>\r\n    </Grid>\r\n}\r\n\r\nexport default AvatarText;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../Overmind/OvermindHelper';\r\n\r\ninterface Props {\r\n    size: number,\r\n    path: string,\r\n    styles?: any,\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst SvgHelper: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { primaryColor } = useAppState()\r\n\r\n    const classes = useStyles();\r\n    const { path, size, styles } = props\r\n\r\n    return <svg style={{ width: size, height: size, ...styles }} viewBox=\"0 0 24 24\">\r\n        <path fill={primaryColor}\r\n            d={path} />\r\n    </svg>\r\n}\r\n\r\nexport default SvgHelper;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Hidden, IconButton, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../Overmind/OvermindHelper';\r\nimport { GlobalVars } from '../../Others/GlobalVars';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SvgHelper from '../../Helpers/SvgHelper';\r\nimport { OurIcons } from '../../Others/OurIcons';\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        link: {\r\n            marginLeft: 8,\r\n            marginRight: 8,\r\n            textDecoration: 'none'\r\n        },\r\n        divider: {\r\n            height: 1,\r\n            margin: 16,\r\n            width: 90,\r\n            alignSelf: 'center'\r\n        },\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst NavigationLinks: React.FC<Props> = (props) => {\r\n    const { showLeftPart } = useActions()\r\n    const { primaryColor } = useAppState()\r\n    const classes = useStyles();\r\n\r\n    const theme = useTheme()\r\n    const belowSm = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return <Grid container item xs direction='column' justify='center' alignContent='stretch'>\r\n\r\n        <Hidden mdUp>\r\n            <IconButton size='small' onClick={() => {\r\n                showLeftPart(false)\r\n            }}>\r\n                <SvgHelper size={18} path={OurIcons.close} />\r\n            </IconButton>\r\n        </Hidden>\r\n\r\n        <Divider style={{ backgroundColor: primaryColor }} className={classes.divider} orientation=\"horizontal\" flexItem />\r\n\r\n        {\r\n            GlobalVars.routes.map((item, index) => {\r\n                return <Button\r\n                    activeStyle={{ backgroundColor: primaryColor, color: \"white\" }}\r\n                    className={classes.link}\r\n                    key={index}\r\n                    onClick={() => {\r\n                        if (belowSm) {\r\n                            showLeftPart(false)\r\n                        }\r\n                    }}\r\n                    size='small'\r\n                    component={NavLink}\r\n                    to={item.toLowerCase()}\r\n                >{item}</Button>\r\n\r\n            })\r\n        }\r\n\r\n        <Divider style={{ backgroundColor: primaryColor }} className={classes.divider} orientation=\"horizontal\" flexItem />\r\n\r\n    </Grid>\r\n}\r\n\r\nexport default NavigationLinks;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, IconButton, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../Overmind/OvermindHelper';\r\nimport { GlobalVars } from '../../Others/GlobalVars';\r\nimport SvgHelper from '../../Helpers/SvgHelper';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: { paddingBottom: 8, width: '100%' },\r\n        iconButton: { margin: 3 }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst BottomNavigationLinks: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container className={classes.root} direction='row' justify='center' alignItems='center' alignContent='center'>\r\n        {\r\n            GlobalVars.bottomLinks.map((item, index) => {\r\n                return <IconButton className={classes.iconButton} key={index} size='small' target=\"_blank\" href={item.link}>\r\n                    <SvgHelper\r\n                        path={item.svgPath}\r\n                        size={18} />\r\n                </IconButton>\r\n            })\r\n        }\r\n    </Grid>\r\n}\r\n\r\nexport default BottomNavigationLinks;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Theme, Grid, Paper } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../Overmind/OvermindHelper';\r\nimport AvatarText from './Left/AvatarText';\r\nimport NavigationLinks from './Left/NavigationLinks';\r\nimport BottomNavigationLinks from './Left/BottomNavigationLinks';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            height: '100%',\r\n            width: '100%',\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst LeftPart: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container direction='column' item xs={11} sm={11} md={3} lg={3} xl={2}>\r\n        <Paper elevation={12} className={classes.root}>\r\n            <Grid className={classes.root} container direction=\"column\" justify=\"space-around\" alignContent='center' alignItems=\"center\">\r\n                <AvatarText />\r\n                <NavigationLinks />\r\n                <BottomNavigationLinks />\r\n            </Grid>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nexport default LeftPart;","export class GlobalMethods {\r\n    static getHeightWidthWeb = () => {\r\n        console.debug(\"Web\");\r\n\r\n        return {\r\n            width: `calc(100% - 316px)`,\r\n            height: `calc(100% - 168px)`\r\n        }\r\n    }\r\n\r\n    static getHeightWidthMobile = () => {\r\n        console.debug(\"Mobile\");\r\n\r\n        return {\r\n            width: `calc(100% - 48px)`,\r\n            height: `calc(100% - 48px)`\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Hidden, IconButton, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../../Overmind/OvermindHelper';\r\nimport SvgHelper from '../../../Helpers/SvgHelper';\r\nimport { OurIcons } from '../../../Others/OurIcons';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            padding: 16\r\n        },\r\n        divider: {\r\n            height: 1,\r\n            marginTop: 8,\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: 160\r\n            },\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200\r\n            },\r\n        },\r\n        currentRoute: {\r\n            fontSize: 14,\r\n            fontWeight: 600,\r\n            cursor: 'none',\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst RouteLocation: React.FC<Props> = (props) => {\r\n    const { showLeftPart } = useActions()\r\n    let location = useLocation();\r\n    const { primaryColor } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid item xs={8} direction='column' container justify='center'>\r\n        <Grid item xs>\r\n            <Hidden mdUp>\r\n                <IconButton size='small' onClick={() => {\r\n                    showLeftPart(true)\r\n                }}>\r\n                    <SvgHelper path={OurIcons.menu} styles={{ padding: 8 }} size={20} />\r\n                </IconButton>\r\n            </Hidden>\r\n            <Button variant='text' disabled className={classes.currentRoute}>\r\n                {location.pathname.replace(\"/\", \"\")}\r\n            </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs>\r\n            <Divider style={{\r\n                backgroundColor: primaryColor\r\n            }} className={classes.divider} orientation=\"horizontal\" flexItem />\r\n        </Grid>\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default RouteLocation;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, IconButton, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../../Overmind/OvermindHelper';\r\nimport SvgHelper from '../../../Helpers/SvgHelper';\r\nimport { OurIcons } from '../../../Others/OurIcons';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        iconButton: {\r\n            padding: 8\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst TopRightButtons: React.FC<Props> = (props) => {\r\n    const { setPrimaryColor, showColorPickerDialog } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container direction='row' justify='flex-end' item xs={4}>\r\n        {/*\r\n            PLEASE, DON'T CHANGE THIS GITHUB URL.\r\n            ( https://github.com/p32929/p32929.github.io/ )\r\n\r\n            YOU MAY USE THE SOURCE CODE HOWEVER YOU WANT, BUT PLEASE,\r\n            KEEP THE FORK-ICON & the GITHUB-URL under the icon UNCHANGED,\r\n            SO THAT OTHERS CAN ALSO BENIFIT FROM THE ORIGINAL REPOSITORY.\r\n            THANKS... :)\r\n        */}\r\n        <IconButton size='small' target=\"_blank\" href='https://github.com/p32929/p32929.github.io/'>\r\n            <SvgHelper\r\n                styles={{ padding: 8 }}\r\n                path={OurIcons.fork}\r\n                size={20} />\r\n        </IconButton>\r\n\r\n        <IconButton size='small' onClick={() => {\r\n            showColorPickerDialog(true)\r\n        }}>\r\n            <SvgHelper\r\n                styles={{ padding: 8 }}\r\n                path={OurIcons.palette}\r\n                size={20} />\r\n        </IconButton>\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default TopRightButtons;","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, Theme, Typography} from \"@material-ui/core\";\r\nimport {useActions, useAppState} from '../../Overmind/OvermindHelper';\r\nimport SvgHelper from '../../Helpers/SvgHelper';\r\nimport {OurIcons} from '../../Others/OurIcons';\r\n\r\ninterface Props {\r\n    title: string,\r\n    fontStyle?: any\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            marginLeft: 8,\r\n        },\r\n        text: {\r\n            marginLeft: 8,\r\n            marginRight: 8,\r\n            fontSize: 12,\r\n            fontWeight: 600,\r\n            color: \"#757575\"\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst ListTitle: React.FC<Props> = (props) => {\r\n    const {} = useActions()\r\n    const {} = useAppState()\r\n    const {title, fontStyle} = props\r\n    const classes = useStyles();\r\n\r\n    return <Grid container direction='row' alignItems='center' alignContent='center' className={classes.root}>\r\n        <SvgHelper size={20} path={OurIcons.star}/>\r\n        <Typography variant='body2' style={fontStyle} className={classes.text}>{title}</Typography>\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default ListTitle;","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Avatar, Grid, IconButton, Paper, Theme, Typography} from \"@material-ui/core\";\r\nimport {useActions, useAppState} from '../../Overmind/OvermindHelper';\r\nimport {ListItemInterface} from '../../Others/Interfaces';\r\nimport SvgHelper from '../../Helpers/SvgHelper';\r\nimport {OurIcons} from '../../Others/OurIcons';\r\n\r\ninterface Props {\r\n    item: ListItemInterface\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            padding: 2,\r\n        },\r\n        textContainer: {\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            overflow: 'hidden',\r\n            alignSelf: 'center'\r\n        },\r\n        avatar: {\r\n            margin: 16,\r\n        },\r\n        title: {\r\n            color: \"#212121\",\r\n            lineHeight: 1.25\r\n        },\r\n        desc: {\r\n            color: \"#757575\",\r\n            lineHeight: 1.25,\r\n            overflow: 'hidden',\r\n        }\r\n    }\r\n}\r\n\r\nconst getLinkIcon = (url: string | undefined) => {\r\n    if (url) {\r\n        if (url.toString().includes('http') || url.toString().includes('skype:')) {\r\n            return <Grid style={{paddingTop: 16}}>\r\n                <IconButton target=\"_blank\"\r\n                            href={url}\r\n                            size='small'>\r\n                    <SvgHelper\r\n                        path={OurIcons.linkIcon}\r\n                        styles={{padding: 8}}\r\n                        size={22}/>\r\n                </IconButton>\r\n            </Grid>\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst OurListItem: React.FC<Props> = (props) => {\r\n    const {} = useActions()\r\n    const {} = useAppState()\r\n\r\n    const classes = useStyles();\r\n    const {item} = props\r\n    const {logo, title, desc, link} = item\r\n\r\n    return <Grid container item xs={12} sm={12} md={6} lg={6} xl={4} className={classes.root}>\r\n        <Paper elevation={4} style={{width: '100%'}}>\r\n            <Grid container direction='row'>\r\n                <Avatar variant='square' className={classes.avatar} src={logo}/>\r\n\r\n                <Grid container direction='column' item xs className={classes.textContainer}>\r\n                    <Typography variant='body1' className={classes.title}>{title}</Typography>\r\n                    {\r\n                        (desc || link) &&\r\n                        <Typography variant='body2' className={classes.desc}>{desc || link}</Typography>\r\n                    }\r\n                </Grid>\r\n\r\n                {\r\n                    getLinkIcon(link)\r\n                }\r\n\r\n            </Grid>\r\n        </Paper>\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default OurListItem;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../Overmind/OvermindHelper';\r\nimport { TitledListItemInterface } from '../../Others/Interfaces';\r\nimport ListTitle from './ListTitle';\r\nimport OurListItem from './OurListItem';\r\n\r\ninterface Props {\r\n    item: TitledListItemInterface\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            marginTop: 4,\r\n            marginLeft: 8,\r\n            marginBottom: 16,\r\n        },\r\n        itemRoot: {\r\n            marginTop: 8\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst ListItemWithIcon: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n    const { item } = props\r\n    const { text, arr } = item\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container direction='column' className={classes.root}>\r\n        <ListTitle title={text} />\r\n        <Grid container direction='row' className={classes.itemRoot}>\r\n            {\r\n                arr.map((arrItem, index) => {\r\n                    return <OurListItem item={arrItem} />\r\n                })\r\n            }\r\n        </Grid>\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default ListItemWithIcon;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../../Overmind/OvermindHelper';\r\nimport { GlobalVars } from '../../../Others/GlobalVars';\r\nimport ListItemWithIcon from '../../Items/ListItemWithIcon';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst ProjectsRoute: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container xs={12} item direction='row'>\r\n        {\r\n            GlobalVars.projects.map((item, index) => {\r\n                return <ListItemWithIcon item={item} />\r\n            })\r\n        }\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default ProjectsRoute;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../../Overmind/OvermindHelper';\r\nimport { GlobalVars } from '../../../Others/GlobalVars';\r\nimport ListItemWithIcon from '../../Items/ListItemWithIcon';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst ContactRoute: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container xs={12} item direction='row'>\r\n        {\r\n            GlobalVars.contacts.map((item, index) => {\r\n                return <ListItemWithIcon item={item} />\r\n            })\r\n        }\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default ContactRoute;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../../Overmind/OvermindHelper';\r\nimport { GlobalVars } from '../../../Others/GlobalVars';\r\nimport ListItemWithIcon from '../../Items/ListItemWithIcon';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst SkillsRoute: React.FC<Props> = (props) => {\r\n    const { } = useActions()\r\n    const { } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Grid container xs={12} item direction='row'>\r\n        {\r\n            GlobalVars.skills.map((item, index) => {\r\n                return <ListItemWithIcon item={item} />\r\n            })\r\n        }\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default SkillsRoute;","import React from 'react'\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport {Grid, Theme, Typography} from \"@material-ui/core\";\r\nimport {useActions, useAppState} from '../../../Overmind/OvermindHelper';\r\nimport {LocalImages} from '../../../Others/Images';\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport ListTitle from '../../Items/ListTitle';\r\nimport {GlobalVars} from '../../../Others/GlobalVars';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst aboveSmAvatarSize = {height: '95%'}\r\nconst belowSmAvatarSize = {height: '75%'}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {\r\n        root: {\r\n            padding: 8\r\n        },\r\n        text: {\r\n            paddingLeft: 8,\r\n            paddingBottom: 8,\r\n            lineHeight: 1.3,\r\n            fontWeight: 400,\r\n            [theme.breakpoints.up('xl')]: {\r\n                fontSize: 18,\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                fontSize: 14,\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst AboutRoute: React.FC<Props> = (props) => {\r\n    const {} = useActions()\r\n    const {} = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    const theme = useTheme()\r\n    const belowSm = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return <Grid className={classes.root} container item xs={12} direction='column' justify='flex-end'\r\n                 alignItems='center' alignContent='center'>\r\n        <Grid style={{height: 0, padding: 4}} id='avatarImageGrid' item xs container justify='center'\r\n              alignItems='center' alignContent='center'>\r\n            <img style={belowSm ? belowSmAvatarSize : aboveSmAvatarSize}\r\n                 src={GlobalVars.myRightAvatarImage ?? LocalImages.avatar_with_laptop}/>\r\n        </Grid>\r\n\r\n        <Grid item container direction='column'>\r\n            <ListTitle title=\"About me\" fontStyle={{fontSize: 20, fontWeight: 'bold', color: \"#212121\"}}/>\r\n            <Typography className={classes.text}>\r\n                {GlobalVars.myDetails}\r\n            </Typography>\r\n        </Grid>\r\n\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default AboutRoute;","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Theme, Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../Overmind/OvermindHelper';\r\nimport RouteLocation from './Right/Top/RouteLocation';\r\nimport TopRightButtons from './Right/Top/TopRightButtons';\r\nimport ProjectsRoute from './Right/Routes/ProjectsRoute';\r\nimport ContactRoute from './Right/Routes/ContactRoute';\r\nimport SkillsRoute from './Right/Routes/SkillsRoute';\r\nimport AboutRoute from './Right/Routes/AboutRoute';\r\nimport { GlobalVars } from '../Others/GlobalVars';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n  return {\r\n    root: {\r\n      padding: 16,\r\n    },\r\n    content: {\r\n      paddingRight: 8,\r\n      maxHeight: '100vh',\r\n      maxWidth: '100%',\r\n    }\r\n  }\r\n}\r\n\r\nconst routes = [\r\n  AboutRoute,\r\n  SkillsRoute,\r\n  ProjectsRoute,\r\n  ContactRoute,\r\n]\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst RightPart: React.FC<Props> = (props) => {\r\n  const { } = useActions()\r\n  const { isLeftShowing } = useAppState()\r\n  const classes = useStyles();\r\n  const [contentHeight, setContentHeight] = useState(0)\r\n\r\n  const theme = useTheme()\r\n  const belowSm = useMediaQuery(theme.breakpoints.down('sm'))\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const rc = document.getElementById('container')\r\n    const rt = document.getElementById('right-top')\r\n    const rb = document.getElementById('right-bottom')\r\n\r\n    if (rc && rt) {\r\n      const height = rc?.offsetHeight - rt?.offsetHeight\r\n      console.log(\"Height: \" + height);\r\n\r\n      setContentHeight(height)\r\n    }\r\n  }, [isLeftShowing, belowSm])\r\n\r\n  useEffect(() => {\r\n    document?.getElementById('right-bottom')?.scroll(0, 0)\r\n  }, [location])\r\n\r\n  return <Grid id='right-container' container xs item direction='row' alignContent='flex-start'  >\r\n    <Grid id='right-top' container direction='row' className={classes.root} justify='space-between' alignItems='flex-start' alignContent='flex-start'>\r\n      <RouteLocation />\r\n      <TopRightButtons />\r\n    </Grid>\r\n    <Grid id='right-bottom' style={{ height: contentHeight, maxHeight: contentHeight, overflowY: 'auto', }} item xs={12} container className={classes.content} >\r\n      <Switch>\r\n        {\r\n          GlobalVars.routes.map((item, index) => {\r\n            return <Route exact path={`/${item.toLowerCase()}`} component={routes[index]} />\r\n          })\r\n        }\r\n      </Switch>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n\r\nexport default RightPart;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogContent, Divider, Grid, Theme } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from '../../Overmind/OvermindHelper';\r\nimport { BlockPicker } from 'react-color'\r\nimport { GlobalVars } from '../../Others/GlobalVars';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n    return {}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst ColorPickerDialog: React.FC<Props> = (props) => {\r\n    const { setPrimaryColor, showColorPickerDialog } = useActions()\r\n    const { primaryColor, isColorPickerDialogShowing } = useAppState()\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Dialog open={isColorPickerDialogShowing} onClose={() => {\r\n        showColorPickerDialog(false)\r\n    }}>\r\n        <DialogContent>\r\n            <BlockPicker\r\n                color={primaryColor}\r\n                onChange={(color, event) => {\r\n                    setPrimaryColor(color.hex)\r\n                    showColorPickerDialog(false)\r\n                }}\r\n                colors={GlobalVars.otherColors}\r\n            />\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default ColorPickerDialog;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Theme, Grid, Paper } from \"@material-ui/core\";\r\nimport { useActions, useAppState } from './Overmind/OvermindHelper';\r\nimport LeftPart from './Components/LeftPart';\r\nimport { GlobalMethods } from './Others/GlobalMethods';\r\nimport RightPart from './Components/RightPart';\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { MemoryRouter, Route, Redirect } from 'react-router-dom';\r\nimport ColorPickerDialog from './Components/Dialogs/ColorPickerDialog';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst getThemeObj = (theme: Theme) => {\r\n  return {\r\n    root: {\r\n      height: '100vh',\r\n      maxHeight: '100vh',\r\n    },\r\n    content: {\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    paper: {\r\n      [theme.breakpoints.down('sm')]: GlobalMethods.getHeightWidthMobile(),\r\n      [theme.breakpoints.up('md')]: GlobalMethods.getHeightWidthWeb(),\r\n    }\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => (getThemeObj(theme)))\r\n\r\nconst App: React.FC<Props> = (props) => {\r\n  const { showLeftPart } = useActions()\r\n  const { primaryColor, isLeftShowing } = useAppState()\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme()\r\n  const belowSm = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n  const getLeftPart = () => {\r\n    if (belowSm) {\r\n      if (isLeftShowing) {\r\n        return <LeftPart />\r\n      }\r\n    } else {\r\n      showLeftPart(true)\r\n      return <LeftPart />\r\n    }\r\n  }\r\n\r\n  const getRightPart = () => {\r\n    if (belowSm) {\r\n      if (!isLeftShowing) {\r\n        return <RightPart />\r\n      }\r\n    } else {\r\n      return <RightPart />\r\n    }\r\n  }\r\n\r\n  return <Grid container className={classes.root} justify='center' alignContent='center' alignItems='center'\r\n    direction='column' style={{ backgroundColor: primaryColor }}>\r\n    <ColorPickerDialog />\r\n    <Paper id='container' className={classes.paper} elevation={16}>\r\n      <MemoryRouter>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/about\" />\r\n        </Route>\r\n\r\n        <Grid container direction='row' className={classes.content}>\r\n          {\r\n            getLeftPart()\r\n          }\r\n\r\n          {\r\n            getRightPart()\r\n          }\r\n        </Grid>\r\n      </MemoryRouter>\r\n    </Paper>\r\n  </Grid>\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"overmind-react\";\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { createOvermind } from 'overmind'\r\nimport { config } from './Overmind/OvermindHelper'\r\nimport { theme } from \"./Others/Theme\";\r\nimport App from './App';\r\nimport { GlobalVars } from './Others/GlobalVars';\r\n\r\nconst overmind = createOvermind(config)\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider value={overmind}>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\ndocument.title = GlobalVars.myName;\r\n"],"sourceRoot":""}